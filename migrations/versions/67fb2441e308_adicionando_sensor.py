"""Corrige modelo Sensor e adiciona colunas obrigatórias

Revision ID: 67fb2441e308
Revises: cfffec8f4287
Create Date: 2025-04-26 23:58:59.945920

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID

# revision identifiers, used by Alembic.
revision = '67fb2441e308'
down_revision = 'cfffec8f4287'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensor',
        sa.Column('id', sa.Integer(), primary_key=True),  # Coluna id original como INTEGER
        sa.Column('usuario_id', sa.UUID(), nullable=False),
        sa.Column('propriedade_id', sa.UUID(), nullable=False),
        sa.Column('nome', sa.String(50), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['propriedade_id'], ['propriedade.id'], ),
        sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], )
    )

    # Cria uma coluna temporária do tipo UUID
    op.add_column('sensor', sa.Column('id_uuid', UUID(as_uuid=True), nullable=True))

    # Copia os dados da coluna id original para a coluna temporária, convertendo para UUID
    op.execute("UPDATE sensor SET id_uuid = id::text::uuid")

    # Define a coluna temporária como NOT NULL
    op.alter_column('sensor', 'id_uuid', nullable=False)

    # Remove a coluna id original (INTEGER)
    op.drop_column('sensor', 'id')

    # Renomeia a coluna temporária para id
    op.alter_column('sensor', 'id_uuid', new_column_name='id')

    # Define a nova coluna id (UUID) como chave primária
    op.alter_column('sensor', 'id', primary_key=True)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sensor', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('id',
                            existing_type=sa.UUID(),
                            type_=sa.INTEGER(),
                            existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('propriedade_id')
        batch_op.drop_column('usuario_id')

    # ### end Alembic commands ###