"""sensor removido

Revision ID: d61a578eb8de
Revises: 5146e522c6a9
Create Date: 2025-09-02 20:41:31.341552

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd61a578eb8de'
down_revision = '5146e522c6a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensor')
    op.drop_table('turbidez')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('turbidez',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('valor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('proprietario_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['proprietario_id'], ['usuario.id'], name=op.f('turbidez_proprietario_id_fkey')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('turbidez_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('turbidez_pkey'))
    )
    op.create_table('sensor',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('propriedade_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['propriedade_id'], ['propriedade.id'], name=op.f('sensor_propriedade_id_fkey')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('sensor_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sensor_pkey')),
    sa.UniqueConstraint('propriedade_id', name=op.f('sensor_propriedade_id_key')),
    sa.UniqueConstraint('usuario_id', name=op.f('sensor_usuario_id_key'))
    )
    # ### end Alembic commands ###
